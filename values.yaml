# Default values for flask-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: myrepo/flaskapp
  pullPolicy: IfNotPresent

# This is the version number of the application being deployed. This version number should be
# incremented each time you make changes to the application.
appVersion: latest

containerPort: 5000
liveness: "/"
readiness: "/"

imagePullSecrets: []
nameOverride: "flaskapp"
fullnameOverride: "flaskapp"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

deploymentTemplateAnnotations: {}

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  enabled: true

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: flaskapp.cluster.int
      paths: ['/']
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - flaskapp.cluster.int

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 60Mi
  # requests:
  #   cpu: 20m
  #   memory: 30Mi

nodeSelector: {}

tolerations: []

affinity: {}

configs: {}
#
#configs:
#  HOST: 127.0.0.1
#  USER: myuser

vpa:
  enabled: false
  updateMode: "Off"

env: {}
